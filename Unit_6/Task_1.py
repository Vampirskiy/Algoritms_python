# Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков. 
# Проанализировать результат и определить программы с наиболее эффективным использованием памяти.
# Примечание: По аналогии с эмпирической оценкой алгоритмов идеальным решением будет:
# ● выбрать хорошую задачу, которую имеет смысл оценивать по памяти;
# ● написать 3 варианта кода (один у вас уже есть);
# ● проанализировать 3 варианта и выбрать оптимальный;
# ● результаты анализа (количество занятой памяти в вашей среде разработки) вставить в виде комментариев в файл с кодом. 
# Не забудьте указать версию и разрядность вашей ОС и интерпретатора Python;
# ● написать общий вывод: какой из трёх вариантов лучше и почему.
# ************************************************************

# В массиве случайных целых чисел поменять местами минимальный и максимальный элементы.

import sys


# вариант 1
chi = 5623096547834578
ch = 0
nch = 0

for i in map(int, str(chi)):
    if i % 2 == 0:
        ch += 1
    else:
        nch += 1
print(f'Четных цифр: {ch}, Не четных цифр: {nch}')
print(sys.getsizeof(chi))
print(sys.getsizeof(i))
print(sys.getsizeof(ch))
print(sys.getsizeof(nch))





